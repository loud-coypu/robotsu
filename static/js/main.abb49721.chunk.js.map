{"version":3,"sources":["components/Sersbox/Sersbox.js","components/Country/Country.js","components/CountryList/CountryList.js","App.js","reportWebVitals.js","index.js"],"names":["Sersbox","type","className","placeholder","this","props","onChange","handleChange","React","Component","Country","stats","imgSrc","Code","src","alt","Population","Confirmed","Deaths","Recovered","CountryList","map","country","Id","App","state","countries","searchField","bind","a","detailUrl","fetch","response","json","data","Object","values","_","orderBy","c","population","reduce","r","uid","setState","forEach","e","length","row","country_iso2","toLowerCase","deaths","recovered","confirmed","prevState","concat","target","value","filteredCountries","filter","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb49721.chunk.js","sourcesContent":["import React from \"react\";\n\n\nclass Sersbox extends React.Component{\n    render(){\n        return(\n            <input type=\"search\" className=\"search\" placeholder={this.props.placeholder} onChange={this.props.handleChange}/>\n        )\n    }\n}\n\nexport default Sersbox;","import React from 'react';\nimport './country.css';\n\nconst Country = ({stats}) => {\n    const imgSrc = stats.Code && stats.Code !== \"zz\" ? `https://www.countryflags.io/${stats.Code}/flat/64.png` : \"img/64.png\";\n    return(\n        <div className=\"country\">\n            <img src={imgSrc} alt={stats.Code}></img>\n            <h2>{stats.Country}</h2>\n            <div className=\"stats\">\n                <p>{`Population : ${stats.Population}`}</p>\n                <p>{`Confirmed : ${stats.Confirmed}`}</p>\n                <p>{`Deaths : ${stats.Deaths}`}</p>\n                <p>{`Recovered : ${stats.Recovered}`}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Country;","import React from \"react\";\nimport Country from '../Country/Country';\nimport './countrylist.css';\n\n\nclass CountryList extends React.Component{\n    render(){\n        return(\n            <div className=\"countries\">\n                {\n                    this.props.stats.map(country => <Country key={country.Id} stats={country}/>)\n                }\n            </div>\n            \n        )\n    }\n}\n\n\nexport default CountryList;","import './App.css';\nimport Sersbox from './components/Sersbox/Sersbox';\nimport CountryList from './components/CountryList/CountryList';\nimport React from 'react';\nimport _ from 'lodash'\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      countries: [],\n      stats: [],\n      searchField: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async componentDidMount(){\n    const listUrl = 'https://webhooks.mongodb-stitch.com/api/client/v2.0/app/covid-19-qppza/service/REST-API/incoming_webhook/global?min_date=2021-10-13T00:00:00.000Z&max_date=2021-10-13T00:00:00.000Z&hide_fields=_id,combined_name,country_iso2,country_iso3,loc,state,country_code,confirmed_daily,date,deaths_daily,recovered_daily,confirmed,deaths,recovered';\n    const detailUrl = 'https://webhooks.mongodb-stitch.com/api/client/v2.0/app/covid-19-qppza/service/REST-API/incoming_webhook/global?min_date=2021-10-13T00:00:00.000Z&max_date=2021-10-13T00:00:00.000Z&hide_fields=_id,combined_name,country_iso3,loc,state,country_code,confirmed_daily,date,deaths_daily,recovered_daily&uid=';\n        \n    const response = await fetch(listUrl)\n    const data = await response.json();\n    const countries = Object.values(_.orderBy(data, [c => c.population], ['desc']).reduce( (r, a)  => {\n      r[a.country] = r[a.country] || a.uid;\n      return r;\n    }, {}));\n\n    this.setState({countries});\n\n    this.state.countries.forEach(async e => {\n      const response = await fetch(detailUrl + e);\n      const data = await response.json();\n      if (data.length)\n      {\n        const row = data[0];\n        const country = {\n          Id: row.uid,\n          Code: row.country_iso2 ? row.country_iso2.toLowerCase() : \"zz\",\n          Country: row.country,\n          Deaths : row.deaths,\n          Recovered : row.recovered,\n          Confirmed : row.confirmed,\n          Population: row.population\n        };\n        this.setState(prevState => (\n            {stats: prevState.stats.concat(country)}\n          ));\n      }\n    });\n  }\n  handleChange(e){\n    this.setState({searchField: e.target.value})\n  }\n  \n  render(){\n    const {stats, searchField} = this.state;\n    const filteredCountries = stats.filter(c => c.Country.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Countries</h1>\n        <Sersbox placeholder=\"Enter country name\" handleChange={this.handleChange}/>\n        <CountryList stats={filteredCountries}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}